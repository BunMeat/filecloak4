{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marc\\\\Desktop\\\\filecloak\\\\filecloak\\\\src\\\\pages\\\\AdminPageEncryptFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, signOut } from 'firebase/auth'; // Import Firebase auth functions\nimport FileCloak from '../FileCloak.webp';\nimport './AdminPageEncryptFile.css';\nimport CryptoJS from 'crypto-js';\nimport { initializeApp } from 'firebase/app';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n};\nconst firebaseApp = initializeApp(firebaseConfig); // Initialize only once\nconst auth = getAuth(firebaseApp); // Initialize auth once here\n\nfunction AdminPageEncryptFile() {\n  _s();\n  const navigate = useNavigate();\n  const [encryptionKey, setEncryptionKey] = useState('');\n  const [note, setNote] = useState('');\n  const [files, setFiles] = useState([]);\n  const [zipFiles, setZipFiles] = useState(false);\n  const [encryptedLinks, setEncryptedLinks] = useState([]);\n  const [error, setError] = useState('');\n\n  // On component mount, check if the user is authenticated\n  useEffect(() => {\n    const user = auth.currentUser;\n    if (!user) {\n      // If no user is logged in, redirect to login page\n      navigate('/login');\n    }\n  }, [navigate]);\n\n  // Handle logout\n  const handleLogout = () => {\n    signOut(auth).then(() => {\n      navigate('/login');\n    }).catch(error => {\n      setError('Failed to log out: ' + error.message);\n    });\n  };\n\n  // ... (rest of the code remains unchanged)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"encrypt-file-body\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPageEncryptFile, \"ToK2Ty+7Fr38lfttKkgHy+uB+Cg=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPageEncryptFile;\nexport default AdminPageEncryptFile;\nvar _c;\n$RefreshReg$(_c, \"AdminPageEncryptFile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","getAuth","signOut","FileCloak","CryptoJS","initializeApp","jsxDEV","_jsxDEV","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","firebaseApp","auth","AdminPageEncryptFile","_s","navigate","encryptionKey","setEncryptionKey","note","setNote","files","setFiles","zipFiles","setZipFiles","encryptedLinks","setEncryptedLinks","error","setError","user","currentUser","handleLogout","then","catch","message","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Marc/Desktop/filecloak/filecloak/src/pages/AdminPageEncryptFile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getAuth, signOut } from 'firebase/auth'; // Import Firebase auth functions\r\nimport FileCloak from '../FileCloak.webp';\r\nimport './AdminPageEncryptFile.css';\r\nimport CryptoJS from 'crypto-js';\r\nimport { initializeApp } from 'firebase/app';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig); // Initialize only once\r\nconst auth = getAuth(firebaseApp); // Initialize auth once here\r\n\r\nfunction AdminPageEncryptFile() {\r\n  const navigate = useNavigate();\r\n  const [encryptionKey, setEncryptionKey] = useState('');\r\n  const [note, setNote] = useState('');\r\n  const [files, setFiles] = useState([]);\r\n  const [zipFiles, setZipFiles] = useState(false);\r\n  const [encryptedLinks, setEncryptedLinks] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  // On component mount, check if the user is authenticated\r\n  useEffect(() => {\r\n    const user = auth.currentUser;\r\n    if (!user) {\r\n      // If no user is logged in, redirect to login page\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n\r\n  // Handle logout\r\n  const handleLogout = () => {\r\n    signOut(auth).then(() => {\r\n      navigate('/login');\r\n    }).catch((error) => {\r\n      setError('Failed to log out: ' + error.message);\r\n    });\r\n  };\r\n\r\n  // ... (rest of the code remains unchanged)\r\n\r\n  return (\r\n    <div className='encrypt-file-body'>\r\n      {/* ... (rest of the return statement remains unchanged) */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPageEncryptFile;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,EAAEC,OAAO,QAAQ,eAAe,CAAC,CAAC;AAClD,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAO,4BAA4B;AACnC,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,aAAa,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAC1CC,UAAU,EAAEH,OAAO,CAACC,GAAG,CAACG,8BAA8B;EACtDC,SAAS,EAAEL,OAAO,CAACC,GAAG,CAACK,6BAA6B;EACpDC,aAAa,EAAEP,OAAO,CAACC,GAAG,CAACO,iCAAiC;EAC5DC,iBAAiB,EAAET,OAAO,CAACC,GAAG,CAACS,sCAAsC;EACrEC,KAAK,EAAEX,OAAO,CAACC,GAAG,CAACW;AACrB,CAAC;AAED,MAAMC,WAAW,GAAGlB,aAAa,CAACG,cAAc,CAAC,CAAC,CAAC;AACnD,MAAMgB,IAAI,GAAGvB,OAAO,CAACsB,WAAW,CAAC,CAAC,CAAC;;AAEnC,SAASE,oBAAoBA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAG3B,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACgC,IAAI,EAAEC,OAAO,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACkC,KAAK,EAAEC,QAAQ,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoC,QAAQ,EAAEC,WAAW,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACsC,cAAc,EAAEC,iBAAiB,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACwC,KAAK,EAAEC,QAAQ,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMyC,IAAI,GAAGhB,IAAI,CAACiB,WAAW;IAC7B,IAAI,CAACD,IAAI,EAAE;MACT;MACAb,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMe,YAAY,GAAGA,CAAA,KAAM;IACzBxC,OAAO,CAACsB,IAAI,CAAC,CAACmB,IAAI,CAAC,MAAM;MACvBhB,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,CAACiB,KAAK,CAAEN,KAAK,IAAK;MAClBC,QAAQ,CAAC,qBAAqB,GAAGD,KAAK,CAACO,OAAO,CAAC;IACjD,CAAC,CAAC;EACJ,CAAC;;EAED;;EAEA,oBACEtC,OAAA;IAAKuC,SAAS,EAAC;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE7B,CAAC;AAEV;AAACxB,EAAA,CAlCQD,oBAAoB;EAAA,QACVzB,WAAW;AAAA;AAAAmD,EAAA,GADrB1B,oBAAoB;AAoC7B,eAAeA,oBAAoB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}