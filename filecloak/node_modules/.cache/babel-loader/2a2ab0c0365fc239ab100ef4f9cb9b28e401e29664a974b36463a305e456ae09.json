{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marc\\\\Desktop\\\\filecloak\\\\filecloak\\\\src\\\\pages\\\\AdminPageEncryptFile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, signOut } from 'firebase/auth'; // Import Firebase auth functions\nimport FileCloak from '../FileCloak.webp';\nimport './AdminPageEncryptFile.css';\nimport CryptoJS from 'crypto-js';\nimport { initializeApp } from 'firebase/app';\n\n// Firebase configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\nconst firebaseApp = initializeApp(firebaseConfig); // Initialize only once\nconst auth = getAuth(firebaseApp); // Use the firebaseApp for auth\n\nfunction AdminPageEncryptFile() {\n  _s();\n  const navigate = useNavigate();\n  const [encryptionKey, setEncryptionKey] = useState('');\n  const [note, setNote] = useState(''); // State for a single note input\n  const [files, setFiles] = useState([]);\n  const [zipFiles, setZipFiles] = useState(false);\n  const [encryptedLinks, setEncryptedLinks] = useState([]);\n  const [error, setError] = useState('');\n  const [fileNames, setFileNames] = useState(''); // State for displaying file names\n  const [fileNotes, setFileNotes] = useState([]); // State to hold notes for each file\n\n  // On component mount, check if the user is authenticated\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        // User is authenticated\n      } else {\n        navigate('/login'); // Redirect to login if user is not authenticated\n      }\n    });\n\n    // Cleanup the subscription on component unmount\n    return () => unsubscribe();\n  }, [navigate]);\n  const handleLogout = () => {\n    signOut(auth).then(() => {\n      navigate('/login');\n    }).catch(error => {\n      setError('Failed to log out: ' + error.message);\n    });\n  };\n\n  // Function to handle file change and update file names in state\n  const handleFileChange = event => {\n    const selectedFiles = event.target.files;\n    setFiles(selectedFiles);\n\n    // Update file names using state\n    const fileNamesArray = Array.from(selectedFiles).map(file => file.name).join(', ');\n    setFileNames(fileNamesArray);\n\n    // Initialize file notes based on the number of selected files\n    setFileNotes(Array.from(selectedFiles).map(() => '')); // Create an array of empty strings\n  };\n  const handleEncrypt = async event => {\n    event.preventDefault();\n    if (!files || files.length === 0) {\n      setError('Please select files to upload.');\n      return;\n    }\n    if (!encryptionKey) {\n      setError('Please provide an encryption key.');\n      return;\n    }\n    try {\n      const user = auth.currentUser; // Get the current user\n      if (user) {\n        const idToken = await user.getIdToken(); // Get the ID token\n\n        const formData = new FormData();\n        for (const file of files) {\n          formData.append('files', file);\n        }\n        formData.append('key', encryptionKey);\n        formData.append('zipFiles', zipFiles);\n\n        // Include file notes in the form data\n        fileNotes.forEach((note, index) => {\n          formData.append(`note_${index}`, note); // Append each note with a unique key\n        });\n        const response = await fetch('http://localhost:4000/encryptfile', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${idToken}` // Include ID token in the Authorization header\n          },\n          body: formData\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setEncryptedLinks(data.encryptedLinks);\n          setError('');\n        } else {\n          setError(data.message);\n        }\n      } else {\n        setError('User is not authenticated.');\n      }\n    } catch (error) {\n      setError('An error occurred: ' + error.message);\n    }\n  };\n  const handleKeyChange = event => {\n    const key = event.target.value.slice(0, 64);\n    setEncryptionKey(key);\n  };\n  const handleZipCheckboxChange = () => {\n    setZipFiles(!zipFiles); // Toggle the checkbox state\n  };\n  const exportToTxt = () => {\n    const fileData = encryptedLinks.map((link, index) => {\n      var _files$index;\n      const fileName = ((_files$index = files[index]) === null || _files$index === void 0 ? void 0 : _files$index.name) || `File ${index + 1}`;\n      return `File Name: ${fileName}\\nEncrypted Token: ${link}\\n`;\n    }).join('\\n');\n    const exportContent = `Encryption Key: ${encryptionKey}\\n\\n${fileData}`;\n    const blob = new Blob([exportContent], {\n      type: 'text/plain'\n    });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'encryptedFilesInfo.txt';\n    link.click();\n  };\n  const handleNoteChange = (index, value) => {\n    const newFileNotes = [...fileNotes];\n    newFileNotes[index] = value; // Update the note for the specific file\n    setFileNotes(newFileNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"encrypt-file-body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"encrypt-file-container\",\n      id: \"encryptForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logoutButton\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"logout-btn\",\n          id: \"logoutButton\",\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: FileCloak,\n          className: \"encrypt-file-logo\",\n          alt: \"FileCloak\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"encrypt-file-form\",\n        onSubmit: handleEncrypt,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"encrypt-file-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-encryption\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"header2\",\n              children: \"Input File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"encrypt-text-btn\",\n                id: \"encryptTextButton\",\n                onClick: () => navigate('/encrypttext'),\n                children: \"Encrypt Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-input-div\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"drop-area\",\n                id: \"dropArea\",\n                children: [!fileNames && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Drag and drop files or click to select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 34\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"file-input\",\n                  type: \"file\",\n                  id: \"fileInput\",\n                  name: \"file\",\n                  multiple: true,\n                  required: true,\n                  onChange: handleFileChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this), fileNames && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Files Selected: \", fileNames]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"zip-checkbox-container\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"checkbox\",\n                    type: \"checkbox\",\n                    id: \"zipFilesCheckbox\",\n                    checked: zipFiles,\n                    onChange: handleZipCheckboxChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 21\n                  }, this), ' ', \"Zip Files\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                type: \"text\",\n                className: \"counter\",\n                id: \"keyGen\",\n                rows: \"3\",\n                cols: \"60\",\n                placeholder: \"You can also input a 64 character long key\",\n                maxLength: \"64\",\n                value: encryptionKey,\n                onChange: handleKeyChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"counter-tracker\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  id: \"counter\",\n                  children: encryptionKey.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this), \" / 64 characters\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"keygen-btn\",\n                id: \"keyGenButton\",\n                type: \"button\",\n                onClick: () => setEncryptionKey(CryptoJS.lib.WordArray.random(64).toString()),\n                children: \"Generate Key\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"copy-btn\",\n                id: \"copyButton\",\n                type: \"button\",\n                onClick: () => navigator.clipboard.writeText(encryptionKey),\n                children: \"Copy to Clipboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Notes for Files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 19\n              }, this), Array.from(files).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"Note for \", files[index].name, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  rows: \"3\",\n                  cols: \"50\",\n                  value: fileNotes[index],\n                  onChange: e => handleNoteChange(index, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"encrypt-btn\",\n              id: \"encryptButton\",\n              children: \"Encrypt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 25\n            }, this), encryptedLinks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [encryptedLinks.map((link, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  rows: \"3\",\n                  cols: \"80\",\n                  value: link,\n                  readOnly: true,\n                  className: \"encrypted-links-textarea\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"copy-btn\",\n                  type: \"button\",\n                  onClick: () => navigator.clipboard.writeText(link),\n                  children: \"Copy to Clipboard\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"export-btn\",\n                type: \"button\",\n                onClick: exportToTxt,\n                children: \"Export to .txt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"decrypt-btn\",\n                id: \"decryptButton\",\n                onClick: () => navigate('/decrypt'),\n                children: \"Decrypt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 135\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"list-btn\",\n                id: \"listButton\",\n                onClick: () => navigate('/list'),\n                children: \"List Files\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 129\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPageEncryptFile, \"flpVzKfdks6dsjGYwcZM4fnvFCw=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPageEncryptFile;\nexport default AdminPageEncryptFile;\nvar _c;\n$RefreshReg$(_c, \"AdminPageEncryptFile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","getAuth","signOut","FileCloak","CryptoJS","initializeApp","jsxDEV","_jsxDEV","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","firebaseApp","auth","AdminPageEncryptFile","_s","navigate","encryptionKey","setEncryptionKey","note","setNote","files","setFiles","zipFiles","setZipFiles","encryptedLinks","setEncryptedLinks","error","setError","fileNames","setFileNames","fileNotes","setFileNotes","unsubscribe","onAuthStateChanged","user","handleLogout","then","catch","message","handleFileChange","event","selectedFiles","target","fileNamesArray","Array","from","map","file","name","join","handleEncrypt","preventDefault","length","currentUser","idToken","getIdToken","formData","FormData","append","forEach","index","response","fetch","method","headers","body","data","json","ok","handleKeyChange","key","value","slice","handleZipCheckboxChange","exportToTxt","fileData","link","_files$index","fileName","exportContent","blob","Blob","type","document","createElement","href","URL","createObjectURL","download","click","handleNoteChange","newFileNotes","className","children","id","onClick","_jsxFileName","lineNumber","columnNumber","src","alt","onSubmit","multiple","required","onChange","checked","rows","cols","placeholder","maxLength","lib","WordArray","random","toString","navigator","clipboard","writeText","_","e","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/Marc/Desktop/filecloak/filecloak/src/pages/AdminPageEncryptFile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getAuth, signOut } from 'firebase/auth'; // Import Firebase auth functions\r\nimport FileCloak from '../FileCloak.webp';\r\nimport './AdminPageEncryptFile.css';\r\nimport CryptoJS from 'crypto-js';\r\nimport { initializeApp } from 'firebase/app';\r\n\r\n// Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig); // Initialize only once\r\nconst auth = getAuth(firebaseApp); // Use the firebaseApp for auth\r\n\r\nfunction AdminPageEncryptFile() {\r\n  const navigate = useNavigate();\r\n  const [encryptionKey, setEncryptionKey] = useState('');\r\n  const [note, setNote] = useState(''); // State for a single note input\r\n  const [files, setFiles] = useState([]);\r\n  const [zipFiles, setZipFiles] = useState(false);\r\n  const [encryptedLinks, setEncryptedLinks] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [fileNames, setFileNames] = useState(''); // State for displaying file names\r\n  const [fileNotes, setFileNotes] = useState([]); // State to hold notes for each file\r\n\r\n  // On component mount, check if the user is authenticated\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        // User is authenticated\r\n      } else {\r\n        navigate('/login'); // Redirect to login if user is not authenticated\r\n      }\r\n    });\r\n  \r\n    // Cleanup the subscription on component unmount\r\n    return () => unsubscribe();\r\n  }, [navigate]);\r\n\r\n  const handleLogout = () => {\r\n    signOut(auth)\r\n      .then(() => {\r\n        navigate('/login');\r\n      })\r\n      .catch((error) => {\r\n        setError('Failed to log out: ' + error.message);\r\n      });\r\n  };\r\n\r\n  // Function to handle file change and update file names in state\r\n  const handleFileChange = (event) => {\r\n    const selectedFiles = event.target.files;\r\n    setFiles(selectedFiles);\r\n    \r\n    // Update file names using state\r\n    const fileNamesArray = Array.from(selectedFiles).map(file => file.name).join(', ');\r\n    setFileNames(fileNamesArray);\r\n\r\n    // Initialize file notes based on the number of selected files\r\n    setFileNotes(Array.from(selectedFiles).map(() => '')); // Create an array of empty strings\r\n  };\r\n\r\n  const handleEncrypt = async (event) => {\r\n    event.preventDefault();\r\n  \r\n    if (!files || files.length === 0) {\r\n      setError('Please select files to upload.');\r\n      return;\r\n    }\r\n  \r\n    if (!encryptionKey) {\r\n      setError('Please provide an encryption key.');\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const user = auth.currentUser; // Get the current user\r\n      if (user) {\r\n        const idToken = await user.getIdToken(); // Get the ID token\r\n  \r\n        const formData = new FormData();\r\n        for (const file of files) {\r\n          formData.append('files', file);\r\n        }\r\n        formData.append('key', encryptionKey);\r\n        formData.append('zipFiles', zipFiles);\r\n  \r\n        // Include file notes in the form data\r\n        fileNotes.forEach((note, index) => {\r\n          formData.append(`note_${index}`, note); // Append each note with a unique key\r\n        });\r\n  \r\n        const response = await fetch('http://localhost:4000/encryptfile', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${idToken}`, // Include ID token in the Authorization header\r\n          },\r\n          body: formData,\r\n        });\r\n        const data = await response.json();\r\n  \r\n        if (response.ok) {\r\n          setEncryptedLinks(data.encryptedLinks);\r\n          setError('');\r\n        } else {\r\n          setError(data.message);\r\n        }\r\n      } else {\r\n        setError('User is not authenticated.');\r\n      }\r\n    } catch (error) {\r\n      setError('An error occurred: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleKeyChange = (event) => {\r\n    const key = event.target.value.slice(0, 64);\r\n    setEncryptionKey(key);\r\n  };\r\n\r\n  const handleZipCheckboxChange = () => {\r\n    setZipFiles(!zipFiles); // Toggle the checkbox state\r\n  };\r\n\r\n  const exportToTxt = () => {\r\n    const fileData = encryptedLinks.map((link, index) => {\r\n      const fileName = files[index]?.name || `File ${index + 1}`;\r\n      return `File Name: ${fileName}\\nEncrypted Token: ${link}\\n`;\r\n    }).join('\\n');\r\n    \r\n    const exportContent = `Encryption Key: ${encryptionKey}\\n\\n${fileData}`;\r\n    const blob = new Blob([exportContent], { type: 'text/plain' });\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = 'encryptedFilesInfo.txt';\r\n    link.click();\r\n  };\r\n\r\n  const handleNoteChange = (index, value) => {\r\n    const newFileNotes = [...fileNotes];\r\n    newFileNotes[index] = value; // Update the note for the specific file\r\n    setFileNotes(newFileNotes);\r\n  };\r\n\r\n  return (\r\n    <div className='encrypt-file-body'>\r\n      <div className=\"encrypt-file-container\" id=\"encryptForm\">\r\n        <div className=\"logoutButton\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"logout-btn\"\r\n            id=\"logoutButton\"\r\n            onClick={handleLogout}\r\n          >\r\n            Logout\r\n          </button>\r\n          <br />\r\n        </div>\r\n        <header>\r\n          <img src={FileCloak} className=\"encrypt-file-logo\" alt=\"FileCloak\" />\r\n        </header>\r\n        <form className=\"encrypt-file-form\" onSubmit={handleEncrypt}>\r\n          <div className=\"encrypt-file-panel\">\r\n            <div className=\"file-encryption\">\r\n              <h2 className='header2'>Input File</h2>\r\n              <div>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"encrypt-text-btn\"\r\n                  id=\"encryptTextButton\"\r\n                  onClick={() => navigate('/encrypttext')}\r\n                >\r\n                  Encrypt Text\r\n                </button>\r\n                <br />\r\n              </div>\r\n              <div className=\"file-input-div\">\r\n                <div className=\"drop-area\" id=\"dropArea\">\r\n                  {!fileNames && <p>Drag and drop files or click to select</p>}\r\n                  <input\r\n                    className=\"file-input\"\r\n                    type=\"file\"\r\n                    id=\"fileInput\"\r\n                    name=\"file\"\r\n                    multiple\r\n                    required\r\n                    onChange={handleFileChange}\r\n                  />\r\n                  {fileNames && <p>Files Selected: {fileNames}</p>}\r\n                </div>\r\n\r\n                <div className=\"zip-checkbox-container\">\r\n                  <label>\r\n                    <input\r\n                      className=\"checkbox\"\r\n                      type=\"checkbox\"\r\n                      id=\"zipFilesCheckbox\"\r\n                      checked={zipFiles}\r\n                      onChange={handleZipCheckboxChange}\r\n                    />{' '}\r\n                    Zip Files\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <textarea\r\n                  type='text'\r\n                  className='counter'\r\n                  id=\"keyGen\"\r\n                  rows=\"3\"\r\n                  cols=\"60\"\r\n                  placeholder=\"You can also input a 64 character long key\"\r\n                  maxLength=\"64\"\r\n                  value={encryptionKey}\r\n                  onChange={handleKeyChange}\r\n                ></textarea>\r\n                <br />\r\n                <p className='counter-tracker'>\r\n                  <span id=\"counter\">{encryptionKey.length}</span> / 64 characters\r\n                </p>\r\n                <button\r\n                  className='keygen-btn'\r\n                  id=\"keyGenButton\"\r\n                  type=\"button\"\r\n                  onClick={() => setEncryptionKey(CryptoJS.lib.WordArray.random(64).toString())}\r\n                >\r\n                  Generate Key\r\n                </button>\r\n                <br />\r\n                <button\r\n                  className='copy-btn'\r\n                  id=\"copyButton\"\r\n                  type=\"button\"\r\n                  onClick={() => navigator.clipboard.writeText(encryptionKey)}\r\n                >\r\n                  Copy to Clipboard\r\n                </button>\r\n              </div>\r\n              \r\n              {/* Render textareas for notes based on the number of files */}\r\n              {files.length > 0 && (\r\n                <div>\r\n                  <h3>Notes for Files</h3>\r\n                  {Array.from(files).map((_, index) => (\r\n                    <div key={index}>\r\n                      <label>Note for {files[index].name}:</label>\r\n                      <textarea\r\n                        rows=\"3\"\r\n                        cols=\"50\"\r\n                        value={fileNotes[index]}\r\n                        onChange={(e) => handleNoteChange(index, e.target.value)}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n\r\n              <button type=\"submit\" className=\"encrypt-btn\" id=\"encryptButton\">\r\n                Encrypt\r\n              </button>\r\n              {error && <p className=\"error-message\">{error}</p>}\r\n              {encryptedLinks.length > 0 && (\r\n                <div>\r\n                  {encryptedLinks.map((link, index) => (\r\n                    <div key={index}>\r\n                      <textarea\r\n                        rows=\"3\"\r\n                        cols=\"80\"\r\n                        value={link}\r\n                        readOnly\r\n                        className=\"encrypted-links-textarea\"\r\n                      />\r\n                      <button\r\n                        className=\"copy-btn\"\r\n                        type=\"button\"\r\n                        onClick={() => navigator.clipboard.writeText(link)}\r\n                      >\r\n                        Copy to Clipboard\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n\r\n                  {/* Export to TXT button */}\r\n                  <button className=\"export-btn\" type=\"button\" onClick={exportToTxt}>\r\n                    Export to .txt\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div>\r\n              <div>\r\n                <button type=\"button\" className=\"decrypt-btn\" id=\"decryptButton\" onClick={() => navigate('/decrypt')}>Decrypt</button><br />\r\n              </div>\r\n              <br />\r\n              <div>\r\n                <button type=\"button\" className=\"list-btn\" id=\"listButton\" onClick={() => navigate('/list')}>List Files</button><br />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPageEncryptFile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}