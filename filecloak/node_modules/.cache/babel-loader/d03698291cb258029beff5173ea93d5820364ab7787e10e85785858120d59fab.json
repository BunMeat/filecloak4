{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marc\\\\Desktop\\\\filecloak\\\\filecloak\\\\src\\\\pages\\\\AdminPageDecrypt.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, signOut } from 'firebase/auth'; // Import Firebase auth functions\nimport FileCloak from '../FileCloak.webp';\nimport './AdminPageDecrypt.css';\nimport CryptoJS from 'crypto-js';\nimport { initializeApp } from 'firebase/app';\n\n// Firebase configuration\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\nconst firebaseApp = initializeApp(firebaseConfig); // Initialize only once\nconst auth = getAuth(firebaseApp); // Use the firebaseApp for auth\n\nfunction AdminPageDecrypt() {\n  _s();\n  const navigate = useNavigate();\n  const db = getFirestore();\n\n  // States to store the inputs and decrypted data\n  const [keyInput, setKeyInput] = useState('');\n  const [tokenInput, setTokenInput] = useState('');\n  const [decryptedURL, setDecryptedURL] = useState(''); // Store decrypted URL\n  const [decryptedNote, setDecryptedNote] = useState(''); // Store decrypted Note\n  const [loading, setLoading] = useState(false); // State to manage loading\n  const [isAdmin, setIsAdmin] = useState(false); // State to check if the user is an admin\n\n  // On component mount, check if the user is authenticated\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      if (user) {\n        // User is authenticated\n      } else {\n        navigate('/login'); // Redirect to login if user is not authenticated\n      }\n    });\n\n    // Cleanup the subscription on component unmount\n    return () => unsubscribe();\n  }, [navigate]);\n\n  // Handle form submission to call the backend decrypt route\n  const handleDecrypt = async e => {\n    e.preventDefault();\n    setLoading(true); // Set loading state\n\n    try {\n      const response = await fetch('http://localhost:4000/decrypt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          keyInput: keyInput.trim(),\n          tokenInput: tokenInput.trim()\n        })\n      });\n      const data = await response.json();\n      setLoading(false); // Reset loading state\n\n      if (response.ok) {\n        // Use state setters to update decryptedURL and decryptedNote\n        setDecryptedURL(data.decryptedURL || '');\n        setDecryptedNote(data.decryptedNote || '');\n        if (data.decryptedURL && data.decryptedNote) {\n          // Export both decrypted URL and note to a .txt file\n          exportToTxt(data.decryptedURL, data.decryptedNote);\n        } else if (data.decryptedNote) {\n          // Only note present, export it as decrypted text\n          exportToTxt2(data.decryptedNote);\n        }\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error('Error during decryption:', error);\n      alert('Error during decryption.');\n      setLoading(false); // Reset loading state\n    }\n  };\n\n  // Logout function\n  const logOut = async () => {\n    try {\n      await auth.signOut(); // Sign out from Firebase\n      alert('Logged out successfully.');\n      navigate('/login'); // Navigate to login page after logout\n    } catch (error) {\n      console.error('Logout error:', error);\n      alert('Error logging out.');\n    }\n  };\n\n  // Navigation functions\n  const goToEncrypt = () => {\n    navigate('/encrypt');\n  };\n  const toggleForms = () => {\n    navigate('/list');\n  };\n\n  // Function to export decrypted URL and note to a .txt file\n  const exportToTxt = (decryptedURL, decryptedNote) => {\n    const text = `Decrypted URL: ${decryptedURL}\\n\\nDecrypted Note: ${decryptedNote}`;\n    const blob = new Blob([text], {\n      type: 'text/plain'\n    });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'decrypted_data.txt'; // Name of the .txt file\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Function to export decrypted text to a .txt file\n  const exportToTxt2 = decryptedText => {\n    const text = `Decrypted Text: ${decryptedText}`;\n    const blob = new Blob([text], {\n      type: 'text/plain'\n    });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'decrypted_text.txt'; // Name of the .txt file\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Redirect unauthorized users\n  if (!isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 12\n    }, this); // Show loading while checking user role\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"decrypt-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"decrypt-container\",\n        id: \"decryptForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logoutButton\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"logout-btn\",\n            onClick: logOut,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 90\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: FileCloak,\n            className: \"decrypt-logo\",\n            alt: \"FileCloak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"decrypt-form\",\n          onSubmit: handleDecrypt,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"decrypt-panel\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"encrypt-btn\",\n                  onClick: goToEncrypt,\n                  children: \"Encrypt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 103\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"list-btn\",\n                  onClick: toggleForms,\n                  children: \"Move to List\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 105\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-decryption\",\n              id: \"fileDecryption\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Input Key\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"admin-key-input\",\n                  type: \"text\",\n                  id: \"keyInput\",\n                  value: keyInput,\n                  onChange: e => setKeyInput(e.target.value) // Update keyInput state\n                  ,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Input Token\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"admin-token-input\",\n                  type: \"text\",\n                  id: \"tokenInput\",\n                  value: tokenInput,\n                  onChange: e => setTokenInput(e.target.value) // Update tokenInput state\n                  ,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"decrypt-btn\",\n                value: \"Decrypt\",\n                id: \"decryptButton\",\n                disabled: loading,\n                children: loading ? 'Decrypting...' : 'Decrypt'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(AdminPageDecrypt, \"/sEfZ7UeeeqelhseBc3iIX9DUZs=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminPageDecrypt;\nexport default AdminPageDecrypt;\nvar _c;\n$RefreshReg$(_c, \"AdminPageDecrypt\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","getAuth","signOut","FileCloak","CryptoJS","initializeApp","jsxDEV","_jsxDEV","Fragment","_Fragment","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","firebaseApp","auth","AdminPageDecrypt","_s","navigate","db","getFirestore","keyInput","setKeyInput","tokenInput","setTokenInput","decryptedURL","setDecryptedURL","decryptedNote","setDecryptedNote","loading","setLoading","isAdmin","setIsAdmin","unsubscribe","onAuthStateChanged","user","handleDecrypt","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","trim","data","json","ok","exportToTxt","exportToTxt2","alert","message","error","console","logOut","goToEncrypt","toggleForms","text","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","appendChild","click","removeChild","decryptedText","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","onClick","src","alt","onSubmit","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Marc/Desktop/filecloak/filecloak/src/pages/AdminPageDecrypt.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getAuth, signOut } from 'firebase/auth'; // Import Firebase auth functions\r\nimport FileCloak from '../FileCloak.webp';\r\nimport './AdminPageDecrypt.css';\r\nimport CryptoJS from 'crypto-js';\r\nimport { initializeApp } from 'firebase/app';\r\n\r\n// Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nconst firebaseApp = initializeApp(firebaseConfig); // Initialize only once\r\nconst auth = getAuth(firebaseApp); // Use the firebaseApp for auth\r\n\r\nfunction AdminPageDecrypt() {\r\n  const navigate = useNavigate();\r\n  const db = getFirestore();\r\n\r\n  // States to store the inputs and decrypted data\r\n  const [keyInput, setKeyInput] = useState('');\r\n  const [tokenInput, setTokenInput] = useState('');\r\n  const [decryptedURL, setDecryptedURL] = useState(''); // Store decrypted URL\r\n  const [decryptedNote, setDecryptedNote] = useState(''); // Store decrypted Note\r\n  const [loading, setLoading] = useState(false); // State to manage loading\r\n  const [isAdmin, setIsAdmin] = useState(false); // State to check if the user is an admin\r\n\r\n  // On component mount, check if the user is authenticated\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        // User is authenticated\r\n      } else {\r\n        navigate('/login'); // Redirect to login if user is not authenticated\r\n      }\r\n    });\r\n  \r\n    // Cleanup the subscription on component unmount\r\n    return () => unsubscribe();\r\n  }, [navigate]);\r\n\r\n  // Handle form submission to call the backend decrypt route\r\n  const handleDecrypt = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true); // Set loading state\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:4000/decrypt', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          keyInput: keyInput.trim(),\r\n          tokenInput: tokenInput.trim(),\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setLoading(false); // Reset loading state\r\n\r\n      if (response.ok) {\r\n        // Use state setters to update decryptedURL and decryptedNote\r\n        setDecryptedURL(data.decryptedURL || '');\r\n        setDecryptedNote(data.decryptedNote || '');\r\n\r\n        if (data.decryptedURL && data.decryptedNote) {\r\n          // Export both decrypted URL and note to a .txt file\r\n          exportToTxt(data.decryptedURL, data.decryptedNote);\r\n        } else if (data.decryptedNote) {\r\n          // Only note present, export it as decrypted text\r\n          exportToTxt2(data.decryptedNote);\r\n        }\r\n      } else {\r\n        alert(data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during decryption:', error);\r\n      alert('Error during decryption.');\r\n      setLoading(false); // Reset loading state\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logOut = async () => {\r\n    try {\r\n      await auth.signOut(); // Sign out from Firebase\r\n      alert('Logged out successfully.');\r\n      navigate('/login'); // Navigate to login page after logout\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n      alert('Error logging out.');\r\n    }\r\n  };\r\n\r\n  // Navigation functions\r\n  const goToEncrypt = () => {\r\n    navigate('/encrypt');\r\n  };\r\n\r\n  const toggleForms = () => {\r\n    navigate('/list');\r\n  };\r\n\r\n  // Function to export decrypted URL and note to a .txt file\r\n  const exportToTxt = (decryptedURL, decryptedNote) => {\r\n    const text = `Decrypted URL: ${decryptedURL}\\n\\nDecrypted Note: ${decryptedNote}`;\r\n    const blob = new Blob([text], { type: 'text/plain' });\r\n\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = 'decrypted_data.txt'; // Name of the .txt file\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  // Function to export decrypted text to a .txt file\r\n  const exportToTxt2 = (decryptedText) => {\r\n    const text = `Decrypted Text: ${decryptedText}`;\r\n    const blob = new Blob([text], { type: 'text/plain' });\r\n\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = 'decrypted_text.txt'; // Name of the .txt file\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  // Redirect unauthorized users\r\n  if (!isAdmin) {\r\n    return <div>Loading...</div>; // Show loading while checking user role\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className='decrypt-body'>\r\n        <div className=\"decrypt-container\" id=\"decryptForm\">\r\n          <div className=\"logoutButton\">\r\n            <button type=\"button\" className=\"logout-btn\" onClick={logOut}>Logout</button><br />\r\n          </div>\r\n          <header>\r\n            <img src={FileCloak} className=\"decrypt-logo\" alt=\"FileCloak\" />\r\n          </header>\r\n          <form className=\"decrypt-form\" onSubmit={handleDecrypt}>\r\n            <div className=\"decrypt-panel\">\r\n              <div>\r\n                <div>\r\n                  <button type=\"button\" className=\"encrypt-btn\" onClick={goToEncrypt}>Encrypt</button><br />\r\n                </div>\r\n                <br />\r\n                <div>\r\n                  <button type=\"button\" className=\"list-btn\" onClick={toggleForms}>Move to List</button><br />\r\n                </div>\r\n              </div>\r\n              <div className=\"file-decryption\" id=\"fileDecryption\">\r\n                <h2>Input Key</h2>\r\n                <div>\r\n                  <input\r\n                    className='admin-key-input'\r\n                    type=\"text\"\r\n                    id=\"keyInput\"\r\n                    value={keyInput}\r\n                    onChange={(e) => setKeyInput(e.target.value)} // Update keyInput state\r\n                    required\r\n                  />\r\n                </div>\r\n                <h2>Input Token</h2>\r\n                <div>\r\n                  <input\r\n                    className='admin-token-input'\r\n                    type=\"text\"\r\n                    id=\"tokenInput\"\r\n                    value={tokenInput}\r\n                    onChange={(e) => setTokenInput(e.target.value)} // Update tokenInput state\r\n                    required\r\n                  />\r\n                </div>\r\n                <button type=\"submit\" className=\"decrypt-btn\" value=\"Decrypt\" id=\"decryptButton\" disabled={loading}>\r\n                  {loading ? 'Decrypting...' : 'Decrypt'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminPageDecrypt;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}