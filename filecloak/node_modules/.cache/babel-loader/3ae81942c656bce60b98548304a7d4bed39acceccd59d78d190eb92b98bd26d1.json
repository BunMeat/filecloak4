{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marc\\\\Desktop\\\\filecloak\\\\filecloak\\\\src\\\\pages\\\\UserPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAuth, signOut } from 'firebase/auth';\nimport { getFirestore, doc, getDoc } from 'firebase/firestore';\nimport FileCloak from '../FileCloak.webp';\nimport './UserPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserPage() {\n  _s();\n  const navigate = useNavigate();\n\n  // States to store the inputs and decrypted data\n  const [keyInput, setKeyInput] = useState('');\n  const [tokenInput, setTokenInput] = useState('');\n  const [decryptedURL, setDecryptedURL] = useState('');\n  const [decryptedNote, setDecryptedNote] = useState('');\n  const [role, setRole] = useState(''); // State to store the user role\n\n  useEffect(() => {\n    const auth = getAuth();\n    const db = getFirestore();\n    const user = auth.currentUser;\n    if (user) {\n      const userDocRef = doc(db, 'users', user.email); // Assuming email is used as the document ID\n      getDoc(userDocRef).then(doc => {\n        if (doc.exists()) {\n          setRole(doc.data().role); // Set the role state\n        } else {\n          console.log('No such user document!');\n        }\n      }).catch(error => {\n        console.error('Error fetching user document:', error);\n      });\n    } else {\n      navigate('/login'); // Redirect to login if no user is authenticated\n    }\n  }, [navigate]); // Include navigate in the dependency array\n\n  // Handle form submission to call the backend decrypt route\n  const handleDecrypt = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:4000/decrypt', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          keyInput: keyInput.trim(),\n          tokenInput: tokenInput.trim()\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Set decrypted data\n        setDecryptedURL(data.decryptedURL || '');\n        setDecryptedNote(data.decryptedNote || '');\n        if (data.decryptedURL && data.decryptedNote) {\n          // Export both decrypted URL and note to a .txt file\n          exportToTxt(data.decryptedURL, data.decryptedNote);\n        } else if (data.decryptedNote) {\n          // Only note present, export it as decrypted text\n          exportToTxt2(data.decryptedNote);\n        }\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error('Error during decryption:', error);\n      alert('Error during decryption.');\n    }\n  };\n\n  // Logout function using Firebase Auth\n  const logOut = async () => {\n    const auth = getAuth(); // Initialize Firebase Auth\n    try {\n      await signOut(auth); // Sign out the user\n      alert('Logged out successfully.');\n      navigate('/login'); // Navigate to the login page after logout\n    } catch (error) {\n      console.error('Error logging out:', error);\n      alert('Error logging out. Please try again.');\n    }\n  };\n\n  // Function to export decrypted URL and note to a .txt file\n  const exportToTxt = (decryptedURL, decryptedNote) => {\n    const text = `Decrypted URL: ${decryptedURL}\\n\\nDecrypted Note: ${decryptedNote}`;\n    const blob = new Blob([text], {\n      type: 'text/plain'\n    });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'decrypted_data.txt'; // Name of the .txt file\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Function to export decrypted text to a .txt file\n  const exportToTxt2 = decryptedText => {\n    const text = `Decrypted Text: ${decryptedText}`;\n    const blob = new Blob([text], {\n      type: 'text/plain'\n    });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'decrypted_text.txt'; // Name of the .txt file\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userpage-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userContainer\",\n        id: \"decryptForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logoutButton\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"logout-btn\",\n            onClick: logOut,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 90\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: FileCloak,\n            className: \"userpage-logo\",\n            alt: \"FileCloak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"login-form\",\n          onSubmit: handleDecrypt,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"file-decryption\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"header2\",\n                children: \"Input Key\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"keyInput\",\n                  className: \"user-key-input\",\n                  value: keyInput,\n                  onChange: e => setKeyInput(e.target.value) // Update keyInput state\n                  ,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"header2\",\n                children: \"Input Token\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"tokenInput\",\n                  className: \"user-token-input\",\n                  value: tokenInput,\n                  onChange: e => setTokenInput(e.target.value) // Update tokenInput state\n                  ,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"decrypt-btn\",\n                value: \"Decrypt\",\n                id: \"decryptButton\",\n                children: \"Decrypt\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(UserPage, \"rwwjMpqJfT8tz7jW4kvDGV5pNhM=\", false, function () {\n  return [useNavigate];\n});\n_c = UserPage;\nexport default UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","getAuth","signOut","getFirestore","doc","getDoc","FileCloak","jsxDEV","_jsxDEV","Fragment","_Fragment","UserPage","_s","navigate","keyInput","setKeyInput","tokenInput","setTokenInput","decryptedURL","setDecryptedURL","decryptedNote","setDecryptedNote","role","setRole","auth","db","user","currentUser","userDocRef","email","then","exists","data","console","log","catch","error","handleDecrypt","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","trim","json","ok","exportToTxt","exportToTxt2","alert","message","logOut","text","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","appendChild","click","removeChild","decryptedText","children","className","id","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onSubmit","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Marc/Desktop/filecloak/filecloak/src/pages/UserPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getAuth, signOut } from 'firebase/auth';\r\nimport { getFirestore, doc, getDoc } from 'firebase/firestore';\r\nimport FileCloak from '../FileCloak.webp';\r\nimport './UserPage.css';\r\n\r\nfunction UserPage() {\r\n  const navigate = useNavigate();\r\n\r\n  // States to store the inputs and decrypted data\r\n  const [keyInput, setKeyInput] = useState('');\r\n  const [tokenInput, setTokenInput] = useState('');\r\n  const [decryptedURL, setDecryptedURL] = useState('');\r\n  const [decryptedNote, setDecryptedNote] = useState('');\r\n  const [role, setRole] = useState(''); // State to store the user role\r\n\r\n  useEffect(() => {\r\n    const auth = getAuth();\r\n    const db = getFirestore();\r\n    const user = auth.currentUser;\r\n\r\n    if (user) {\r\n      const userDocRef = doc(db, 'users', user.email); // Assuming email is used as the document ID\r\n      getDoc(userDocRef)\r\n        .then((doc) => {\r\n          if (doc.exists()) {\r\n            setRole(doc.data().role); // Set the role state\r\n          } else {\r\n            console.log('No such user document!');\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching user document:', error);\r\n        });\r\n    } else {\r\n      navigate('/login'); // Redirect to login if no user is authenticated\r\n    }\r\n  }, [navigate]); // Include navigate in the dependency array\r\n\r\n  // Handle form submission to call the backend decrypt route\r\n  const handleDecrypt = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:4000/decrypt', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          keyInput: keyInput.trim(),\r\n          tokenInput: tokenInput.trim(),\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        // Set decrypted data\r\n        setDecryptedURL(data.decryptedURL || '');\r\n        setDecryptedNote(data.decryptedNote || '');\r\n\r\n        if (data.decryptedURL && data.decryptedNote) {\r\n          // Export both decrypted URL and note to a .txt file\r\n          exportToTxt(data.decryptedURL, data.decryptedNote);\r\n        } else if (data.decryptedNote) {\r\n          // Only note present, export it as decrypted text\r\n          exportToTxt2(data.decryptedNote);\r\n        }\r\n      } else {\r\n        alert(data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during decryption:', error);\r\n      alert('Error during decryption.');\r\n    }\r\n  };\r\n\r\n  // Logout function using Firebase Auth\r\n  const logOut = async () => {\r\n    const auth = getAuth(); // Initialize Firebase Auth\r\n    try {\r\n      await signOut(auth); // Sign out the user\r\n      alert('Logged out successfully.');\r\n      navigate('/login'); // Navigate to the login page after logout\r\n    } catch (error) {\r\n      console.error('Error logging out:', error);\r\n      alert('Error logging out. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Function to export decrypted URL and note to a .txt file\r\n  const exportToTxt = (decryptedURL, decryptedNote) => {\r\n    const text = `Decrypted URL: ${decryptedURL}\\n\\nDecrypted Note: ${decryptedNote}`;\r\n    const blob = new Blob([text], { type: 'text/plain' });\r\n\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = 'decrypted_data.txt'; // Name of the .txt file\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  // Function to export decrypted text to a .txt file\r\n  const exportToTxt2 = (decryptedText) => {\r\n    const text = `Decrypted Text: ${decryptedText}`;\r\n    const blob = new Blob([text], { type: 'text/plain' });\r\n\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = 'decrypted_text.txt'; // Name of the .txt file\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='userpage-body'>\r\n        <div className=\"userContainer\" id=\"decryptForm\">\r\n          <div className=\"logoutButton\">\r\n            <button type=\"button\" className=\"logout-btn\" onClick={logOut}>Logout</button><br />\r\n          </div>\r\n          <header>\r\n            <img src={FileCloak} className=\"userpage-logo\" alt=\"FileCloak\" />\r\n          </header>\r\n          <form className=\"login-form\" onSubmit={handleDecrypt}>\r\n            <div className=\"panel\">\r\n              <div className=\"file-decryption\">\r\n                <h2 className='header2'>Input Key</h2>\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"keyInput\"\r\n                    className=\"user-key-input\"\r\n                    value={keyInput}\r\n                    onChange={(e) => setKeyInput(e.target.value)} // Update keyInput state\r\n                    required\r\n                  />\r\n                </div>\r\n                <h2 className='header2'>Input Token</h2>\r\n                <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"tokenInput\"\r\n                    className=\"user-token-input\"\r\n                    value={tokenInput}\r\n                    onChange={(e) => setTokenInput(e.target.value)} // Update tokenInput state\r\n                    required\r\n                  />\r\n                </div>\r\n                <button type=\"submit\" className=\"decrypt-btn\" value=\"Decrypt\" id=\"decryptButton\">Decrypt</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}